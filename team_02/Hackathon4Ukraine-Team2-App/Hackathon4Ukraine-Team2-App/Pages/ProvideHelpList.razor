@page "/ProvideHelpList"
@using Hackathon4Ukraine_Team2_App.Domain
@using Hackathon4Ukraine_Team2_App.DataAccess
@using Hackathon4Ukraine_Team2_App.Extensions
@using Hackathon4Ukraine_Team2_App.Helpers

@using System.Collections.Generic
@using Microsoft.EntityFrameworkCore

@inject AppDbContext DbContext
@inject NavigationManager NavigationManager

<h3 class="mb-4">Provide help</h3>

<table class="table table-hover">
    <thead class="table-light">
        <tr>
            <th scope="col">#</th>
            <th scope="col">Name</th>
            <th scope="col">
                <div>
                    <select class="form-control" id="category" @onchange="OnCategoryChange">
                        <option value=""><b>Category</b></option>
                        @foreach (var cat in _categories)
                        {
                            <option value="@cat.Name">@cat.Name</option>
                        }
                    </select>
                </div>
            </th>
            <th scope="col">Description</th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 0;
        }
        @foreach (var req in _filteredRequests)
        {
            <tr @onclick="() => NavigationManager.NavigateTo(NavigationHelper.ViewRequestHelp(req.Id))" class="clicable-row">
                <th scope="row">@(++i)</th>
                <td>@req.Name</td>
                <td>@req.Category</td>
                <td>@req.Description</td>
            </tr>
        }
    </tbody>
</table>


@code {
    private List<RequestHelp> _allRequests = new();
    private IEnumerable<RequestHelp> _filteredRequests = Enumerable.Empty<RequestHelp>();
    private List<Category> _categories = new();
    private string _selectedCategory = "";

    protected override async Task OnInitializedAsync()
    {
        _allRequests = await DbContext.RequestHelps.ToListAsync();
        _filteredRequests = _allRequests;
        _categories = await DbContext.Categories.ToListAsync();
    }

    private void OnCategoryChange(ChangeEventArgs e)
    {
        _selectedCategory = e?.Value.ToString();
        if (_selectedCategory.IsNullOrEmpty())
        {
            _filteredRequests = _allRequests;
            return;
        }
        _filteredRequests = _allRequests.Where(r => r.Category == _selectedCategory);
    }
}
